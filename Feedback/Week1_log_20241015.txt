Starting code feedback for Kaiwen, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.45 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, .git, Week2, Feedback

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*~ 
*.tmp
*sandbox
Week1/results/*
Week2/results/*

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************

CMEE Coursework


My CMEE Coursework Repository, including my code, data and results folder for each week
Languages: English
Dependencies: N/A
Author name: Kaiwen Li
Author email: kaiwen.li21@imperial.ac.uk

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, results, data

Found the following files: 

Checking for readme file in weekly directory...

README file missing, 1 pt deducted

Current Points = 99

Results directory is empty - good! 

Found 12 code files: MyExampleScript.sh, FirstBiblio.bib, FirstExample.tex, test.py, tiff2png.sh, boilerplate.sh, csvtospace.sh, tabtocsv.sh, CountLines.sh, ConcatenateTwoFiles.sh, UnixPrac1.txt, variables.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/sh

MSG1="hello"
MSG2=$user
echo "$MSG1 $MSG2"
echo "Hello USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
hello 
Hello USER


**********************************************************************

Code ran without errors

Time consumed = 0.00397s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Kaiwen Li}
\date{}
\begin{document}
\maketitle

\begin{abstract}
    This paper analyzes a seminal equation in population biology.
\end{abstract}

\section{Introduction}
Blah Blah

\section{Materials & Methods}
A foundational equation of population biology is:

\begin{equation}
    \frac{dN}{dt} = r N (1 - \frac{N}{K})
\end{equation}

It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.


\bibliographystyle{plain}
\bibilography{FirstBiblio}
\end{document}

**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file test.py...

File contents are:

**********************************************************************
# FOR loops
for i in range(5):
    print(i)

my_list = [0, 2, "geronimo!", 3.0, True, False]
for k in my_list:
    print(k)

total = 0
summands = [0, 1, 11, 111, 1111]
for s in summands:
    total = total + s
    print(total)

# WHILE loop
z = 0
while z < 100:
    z = z + 1
    print(z)
**********************************************************************

Testing test.py...

test.py is a Python script file;

checking for docstrings...

No functions, but no script-level docstring either
2 pts deducted

Current Points = 97

Output (only first 500 characters): 


**********************************************************************
0
1
2
3
4
0
2
geronimo!
3.0
True
False
0
1
12
123
1234
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

**********************************************************************

Code ran without errors

Time consumed = 0.02963s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash -e
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: tiff2png.sh
# Desc: converts  .tifs to .pngs
# Arguments: none
# Date: Oct 2024


for f in *.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).png"; 
    done
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

convert-im6.q16: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2964.
convert-im6.q16: no images defined `*.png' @ error/convert.c/ConvertImageCommand/3234.

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2024

echo -e "\nThis is a shell script! \n"

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00431s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/sh -e
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: csvtospace.sh
# Desc: creates a space separated values file from a csv file
# Arguments: 1
# Date: Oct 2024

[ ! -f $1 ] && echo "Error: $1 is not a valid file or directory" && exit 1 #check for 1 existing
[[ "$1" != *.csv ]] && echo "Error: $1 does not end in .csv" && exit 1 #check 1 ends in .csv

#====================================================================================================================

BASEFILE_EXT="$(basename "$1")" #gets the file name e.g. 1800.csv
FILENAME="${BASEFILE_EXT%.*}" #removes the extension

#====================================================================================================================

echo "Creating a space separated values version of $BASEFILE_EXT..."
cat $1 | tr -s "," " " > ../results/$FILENAME.ssv #creates the ssv file, with spaces instead of commas
echo "Done!"
exit

#====================================================================================================================
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Error:  does not end in .csv

**********************************************************************

Code ran without errors

Time consumed = 0.00445s

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/sh -e
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: tabtocsv.sh
# Desc: creates csv from a tab delimited file
# Arguments: 1
# Date: Oct 2024

[ ! -f $1 ] && echo "Error: $1 is not a valid file" && exit 1 #check for 1 existing

#====================================================================================================================

BASEFILE_EXT="$(basename "$1")" #gets the file name e.g. test.txt
FILENAME="${BASEFILE_EXT%.*}" #removes the extension

#====================================================================================================================


echo "Creating a comma delimited version of $BASEFILE_EXT..."
cat $1 | tr -s "\t" "," > ../results/$FILENAME.csv #creates the csv version of the file
echo "Done!"
exit

#====================================================================================================================



**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Creating a comma delimited version of ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00704s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash -e
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: CountLines.sh
# Desc: counts the number of lines in a file
# Arguments: none
# Date: Oct 2024

NumLines=`wc -l < $1`
# < redirects contents of the file to the standard input of the command wc -l
echo "The file $1 has $NumLines line(s)"
exit
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The file  has  line(s)

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

CountLines.sh: line 8: $1: ambiguous redirect

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash -e
# Author: Kaiwen Li kl2621@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: merges two files into a third one
# Arguments: none
# Date: Oct 2024

#============================================================================================================================================

[ $# -ne 3 ] && echo "Invalid number of arguments provided. 3 arguments should be provided: <file1> <file2> <outputfile.txt>". && exit 1 #check for 3 arguments
[ ! -f $1 ] && echo "Error: $1 is not a valid file" && exit 1 #check for 1 existing
[ ! -f $2 ] && echo "Error: $2 is not a valid file" && exit 1 #check for 2 existing

[ ! -d "$(dirname "$3")" ] && echo "Error: $3 is not a valid directory" && exit 1 #check if 3 is a valid directory (will not check if the created file name exists)

[[ "$3" != *.txt ]] && echo "Error: $3 does not end in .txt" && exit 1 #check 3 ends in .txt


#============================================================================================================================================

echo "Merging $1 and $2 into $3..."
cat $1 > $3 #merge 1 and 2
cat $2 >> $3
echo "Merged File is:"
cat $3
exit

#============================================================================================================================================

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Invalid number of arguments provided. 3 arguments should be provided: <file1> <file2> <outputfile.txt>.

**********************************************************************

Code ran without errors

Time consumed = 0.00416s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************


#==========================================
#1

wc -w ../data/*.fasta
#wordcount of any .fasta files in data

#==========================================
#2

tail -n +3 ../data/E.coli.fasta 
#tail, skipping first (3-1) lines of e.coli.fasta

#==========================================
#3

wc -m ../data/E.coli.fasta
#wordcount, printing character counts

#==========================================
#4

grep -v ">" ../data/E.coli.fasta | tr -d "\n" | grep -o "ATCG" | wc -l 
# -v ">" removes the first line
# tr -d "\n" removes new lines
#grep -o finds occurrences of "ATCG"

#==========================================
#5

echo "scale=3; ($(grep -v ">" ../data/E.coli.fasta | tr -d "\n" | grep -o -E "A|T" | wc -l)) / ($(grep -v ">" ../data/E.coli.fasta | tr -d "\n" | grep -o -E "C|G" | wc -l))" | bc
#count of A or T divided by count of C or G, to 3dp


**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/sh

## Illustrates the use of variables 

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:
MY_VAR='some string' 
echo 'the current value of the variable is:' $MY_VAR
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (multiple values) from user input:
echo 'Enter two numbers separated by space(s)'
read a b
echo
echo 'you entered' $a 'and' $b '; Their sum is:'

## Assigned Variables; Command substitution
MY_SUM=$(expr $a + $b)
echo $MY_SUM
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Please enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
======================================================================
Finished running scripts

Ran into 3 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 97

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!