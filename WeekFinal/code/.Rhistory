setwd("~/Documents/CMEECoursework/WeekFinal/code")
library(dplyr)
library(ggplot2)
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
dim(MyDF) #check the size of the data frame you loaded
unique(MyDF$Prey.mass.unit)
MyDF <- MyDF %>%
mutate(
Prey.mass.g = ifelse(Prey.mass.unit == "mg", Prey.mass / 1000, Prey.mass)
)
View(MyDF)
unique(MyDF$Location)
# Group data and fit linear models with error handling
model_results <- MyDF %>%
group_by(Predator.lifestage, Type.of.feeding.interaction) %>%
summarize(
intercept = tryCatch(
coef(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))[1],
error = function(e) NA
),
slope = tryCatch(
coef(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))[2],
error = function(e) NA
),
r_squared = tryCatch(
summary(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))$r.squared,
error = function(e) NA
),
p_value = tryCatch(
summary(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))$coefficients[2, 4],
error = function(e) NA
)
)
# View the results
print(model_results)
head(MyDF)
rbind(colnames(MyDF), MyDF[1, ])
print(MyDF[1,])
MyDF <- MyDF %>%
mutate(
Prey.mass.g = ifelse(Prey.mass.unit == "mg", Prey.mass / 1000, Prey.mass)
)
# Group data and fit linear models with error handling
model_results <- MyDF %>%
group_by(Predator.lifestage, Type.of.feeding.interaction) %>%
summarize(
intercept = tryCatch(
coef(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))[1],
error = function(e) NA
),
slope = tryCatch(
coef(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))[2],
error = function(e) NA
),
r_squared = tryCatch(
summary(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))$r.squared,
error = function(e) NA
),
p_value = tryCatch(
summary(lm(log10(Predator.mass) ~ log10(Prey.mass.g), data = cur_data()))$coefficients[2, 4],
error = function(e) NA
)
)
# View the results
print(model_results)
help(group_by())
?help_by()
setwd("~/Documents/CMEECoursework/WeekFinal/code")
library(dplyr)
library(ggplot2)
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
dim(MyDF) #check the size of the data frame you loaded
unique(MyDF$Prey.mass.unit)
#make new prey mass(g) column, where mg is / 1000
MyDF <- MyDF %>%
mutate(
Prey.mass.g = ifelse(Prey.mass.unit == "mg", Prey.mass / 1000, Prey.mass)
)
# Filter out invalid groups
Clean_data <- MyDF %>%
group_by(Location, Predator.lifestage, Type.of.feeding.interaction) %>%
filter(n() > 1, sd(Predator.mass, na.rm = TRUE) > 0) %>%
ungroup()  # Ungroup to return a clean dataframe
?group_by
group_by(data)
#create regression results from DF
regression_results <- Clean_data %>%
#group by the 3 fields
group_by(Location, Predator.lifestage, Type.of.feeding.interaction) %>%
#for each combination, return the intercept, slope, r^2, adjusted r^2 and p_value
summarize(
intercept = coef(lm(Prey.mass.g ~ Predator.mass, data = cur_data()))[1],
slope = coef(lm(Prey.mass.g ~ Predator.mass, data = cur_data()))[2],
r_squared = summary(lm(Prey.mass.g ~ Predator.mass, data = cur_data()))$r.squared,
adj_r_squared = summary(lm(Prey.mass.g ~ Predator.mass, data = cur_data()))$adj.r.squared,
p_value = summary(lm(Prey.mass.g ~ Predator.mass, data = cur_data()))$coefficients[2, 4],
.groups = "drop"
)
print(regression_results)
output_file <- "../results/PP_Regress_Loc_Results.csv"
write.csv(model_results, file = output_file, row.names = FALSE)
# Confirm the save
print("Linear regression results saved to:", output_file, "\n")
View(regression_results)
output_file <- "../results/PP_Regress_Loc_Results.csv"
write.csv(model_results, file = output_file, row.names = FALSE)
write.csv(regression_results, file = output_file, row.names = FALSE)
# Confirm the save
print("Linear regression results saved to:", output_file, "\n")
?coef
# Confirm the save
print(paste("Linear regression results saved to:", output_file, "\n"))
# Confirm the save
print(paste("Linear regression results saved to:", output_file))
